{"version":3,"sources":["img/logo.png","img/player.png","components/modal/Modal.js","components/image-results/ImageResults.js","components/image-random/ImageRandom.js","components/search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Modal","_ref","children","customClass","show","closeCallback","react_default","a","createElement","className","concat","style","display","onClick","title","defaultProps","ImageResults","state","showModal","toggleModal","_this","setState","_this2","this","_this$props","props","images","index","key","map","img","id","href","src","webformatURL","alt","tags","modal_Modal","Fragment","tag","largeImageURL","Component","ImageRandom","image","Search","searchText","amount","apiUrl","apiKey","handleSubmit","e","Object","defineProperty","target","name","value","axios","get","then","res","data","hits","catch","err","console","log","document","getElementById","fetchData","loading","array","setTimeout","response","arr","logo","onChange","user","lib_default","dataLength","length","next","hasMore","loader","image_random_ImageRandom","image_results_ImageResults","App","components_search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.702081af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.899cd5e1.png\";","module.exports = __webpack_public_path__ + \"static/media/player.f45826a8.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './modal.css';\n\nconst Modal = ({ children, customClass, show, closeCallback }) => (\n  <div className={`modal ${customClass}`} style={{ display: show ? 'block' : 'none'}}>\n    <div className=\"overlay\" onClick={closeCallback}></div>\n    <div className=\"modal_content\">\n      {children}\n      <button title=\"Close\" className=\"close_modal\" onClick={closeCallback}>\n        <i className=\"fas fa-times\"></i>\n      </button>\n    </div>\n  </div>\n);\n\nModal.propTypes = {\n  children: PropTypes.element,\n  customClass: PropTypes.string,\n  show: PropTypes.bool,\n  closeCallback: PropTypes.func,\n};\n\nModal.defaultProps = {\n  children: <div>Empty Modal</div>,\n  customClass: '',\n  show: false,\n  closeCallback: () => (false)\n};\n\nexport default Modal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../modal/Modal';\nimport './ImageResult.css';\n\nclass ImageResults extends Component {\n  state = {\n    showModal: false\n  }\n\n  toggleModal = () => {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  }\n    \n\n  render() { \n    const { images, index } = this.props;\n    return (\n      <div className=\"columns\" key={index}>\n          {images.map(img => (\n            <div>\n               <div className=\"tag\"  key={img.id}>\n             <a href=\"#\" onClick={this.toggleModal}> <img className=\"tagImage\"  src={img.webformatURL} alt={img.tags}/></a>\n          \n               </div>\n         \n   \n          \n\n          <Modal\n          show={this.state.showModal}\n          closeCallback={this.toggleModal}\n          customClass=\"custom_modal_class\"\n        >\n        <React.Fragment>\n            <div className=\"modal-button\">\n            <i className=\"fas fa-ellipsis-h icon-class\"></i>\n            <div className=\"buttons\">\n            <button className=\"btn-modal m-r1\">Enviar</button>\n            <button className=\"btn-modal\">Tipo</button>\n            <button className=\"btn-modal\">Guardar</button></div>\n            </div>\n            <div className=\"modal-contenedor\"> \n              <div className=\"modal-image\"><img key={img.id} alt={img.tag} src={img.largeImageURL}/></div> \n              <div className=\"modal-title\">\n              <h3>Fotos y Comentarios</h3>\n              <button className=\"btn-modal\">Fotos</button>\n              <p>¿Has probado este Pin? Añade una foto para mostrar cómo ha ido</p></div>\n            </div>\n           \n            \n           \n          </React.Fragment>\n        </Modal></div>\n      ))}\n      </div>\n    )\n  }\n}\nImageResults.propTypes = {\n    images: PropTypes.array.isRequired\n}\nexport default ImageResults;\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './imagerandom.css';\nimport Modal from '../modal/Modal';\n\n\n\nclass ImageRandom extends Component {\n  state = {\n    showModal: false\n  }\n\n  toggleModal = () => {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  }\nrender()\n   { \n    const { image } = this.props;\n   return (\n     <div className=\"columns\">\n          {image.map(img => (\n            <div>\n              <div className=\"tag\" key={img.id} >\n              <a href=\"#\" onClick={this.toggleModal}> <img className=\"tagImage\"  alt={img.tag} src={img.largeImageURL}/></a>\n              </div>\n\n       \n\n         \n\n\n          <Modal\n          show={this.state.showModal}\n          closeCallback={this.toggleModal}\n          customClass=\"custom_modal_class\"\n        >\n          <React.Fragment>\n            <div className=\"modal-button\">\n            <i className=\"fas fa-ellipsis-h icon-class\"></i>\n            <div className=\"buttons\">\n            <button className=\"btn-modal m-r1\">Enviar</button>\n            <button className=\"btn-modal\">Tipo</button>\n            <button className=\"btn-modal\">Guardar</button></div>\n            </div>\n            <div className=\"modal-contenedor\"> \n              <div className=\"modal-image\"><img key={img.id} alt={img.tag} src={img.largeImageURL}/></div> \n              <div className=\"modal-title\">\n              <h3>Fotos y Comentarios</h3>\n              <button className=\"btn-modal\">Fotos</button>\n              <p>¿Has probado este Pin? Añade una foto para mostrar cómo ha ido</p></div>\n            </div>\n           \n            \n           \n          </React.Fragment>\n        </Modal> \n        </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nImageRandom.propTypes = {\n    image: PropTypes.array.isRequired\n}\nexport default ImageRandom;\n\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport ImageResults from '../image-results/ImageResults';\nimport ImageRandom from '../image-random/ImageRandom';\nimport './Search.css';\nimport logo from '../../img/logo.png';\nimport user from '../../img/player.png';\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\n\nclass Search extends Component {\n state ={\n        searchText: '',\n        amount: 20,\n        apiUrl: 'https://pixabay.com/api/',\n        apiKey: '968305-23d6df71958191317ed0f09cd',\n        images: [],\n        image: []\n        \n      }\n\n \nhandleSubmit = e =>{\n this.setState({[e.target.name]: e.target.value}, () => {\n         axios.get(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=photo&page=1&per_page=20&safesearch=true&orientation=vertical`)\n         .then(res => this.setState({images: res.data.hits}))\n         .catch(err => console.log(err));\n     });\n     document.getElementById('RandomImage').style.display=\"none\";\n };   \n\n\n\n \n componentDidMount(){\n  axios.get(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=landscape&image_type=photo&page=1&per_page=20&safesearch=true&orientation=vertical`)\n  .then(response => this.setState({image: response.data.hits}))\n  .catch(err => console.log(err));\n\n }\n\n fetchData = () => {\n  const { amount} = this.state ;\n  let loading = this.state.amount + 20;\n  this.setState({\n    amount:loading\n  \n  })\n  console.log(amount)\n  axios.get(`${this.state.apiUrl}/?key=${this.state.apiKey}&image_type=photo&page=${amount/20}&per_page=20&safesearch=true&orientation=vertical`)\n  .then(res => {\n    let array= res.data.hits;\n    setTimeout(() => {\n    this.setState({\n     image:this.state.image.concat(array)\n  });\n }, 2000);})\n\n  axios.get(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=photo&page=${amount/20}&per_page=20&safesearch=true&orientation=vertical`)\n  .then(response => {\n    let arr= response.data.hits\n    setTimeout(() => {\n      this.setState({\n        images:arr.concat(this.state.images)\n      });\n    }, 2000);})\n}\n  render() {\n\n    return (\n      <div>\n      <header className=\"header-top\">\n\n          <div className=\"input-box\">\n         <div className=\"logo\"><img alt=\"logo\" src={logo}/></div>\n          <input className=\"input-search\" name=\"searchText\" \n          value={this.state.searchText} \n          onChange={this.handleSubmit}/>\n         </div>\n\n        <div className=\"login-box\">\n            <h5 className=\"text-title\">Inicio</h5>\n            <h5 className=\"text-title\">Siguiendo</h5>\n            <div className=\"user-box\"><img alt=\"user\" src={user}/></div>\n            <h5 className=\"text-title\">Juan Nieve</h5>\n            <i className=\"fas fa-comment-dots icon-class\"></i>\n            <i className=\"fas fa-bell icon-class\"></i>\n            <i className=\"fas fa-ellipsis-h icon-class\"></i>\n\n\n        </div>\n        </header>\n\n        <div className=\"container-img key={index}\">\n        <InfiniteScroll\n          dataLength={(this.state.image.length,this.state.images.length)}\n          next={this.fetchData}\n          hasMore={true}\n          loader={<div className=\"loading-gif\"><img \n         src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\n         alt=\"loading\"/></div>}>\n\n        <div id=\"RandomImage\">\n        <ImageRandom  image={this.state.image}/>        \n        </div> \n\n        <ImageResults images={this.state.images}/> \n        </InfiniteScroll>\n\n        \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport Search from './components/search/Search';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Search />\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}